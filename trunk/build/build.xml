<project name="SDRTrunk" default="SDRTrunk" basedir=".">
  <description>
    Ant build script for SDRTrunk Decoder Application
  </description>

  <!-- version properties -->
  <property name="major" value="0"/>
  <property name="minor" value="1"/>
  <property name="build" value="4"/>

  <!-- Build properties -->
  <property name="classes" location="../classes"/>
  <property name="configs"  location="../config"/>
  <property name="images"  location="../images"/>
  <property name="libs"  location="../imports"/>
  <property name="license"  location="../license"/>
  <property name="product"  location="../product"/>
  <property name="scripts"  location="../scripts"/>
  <property name="src" location="../src"/>

  <path id="classpath">
    <fileset dir="${libs}" includes="*.jar" />
  </path>
  
  <target name="init">
    <!-- Create the classes folder to contain the compiled java classes -->
    <mkdir dir="${classes}"/>
  	
    <!-- Create version file -->
  	<echo message="${major}.${minor}.${build}" file="${classes}/sdrtrunk-version"/>
  </target>

  <target name="compile" depends="clean,init"
        description="Compile java classes" >
    <!-- Compile the java code from ${src} into ${classes} -->
    <javac srcdir="${src}" 
           destdir="${classes}" 
           classpathref="classpath"
           includeantruntime="false" />
  </target>

  <target name="SDRTrunk" depends="compile" description="Create SDRTrunk application" >
    <!-- Create the distribution directory -->
    <mkdir dir="${product}"/>

    <!-- Create jar file -->
    <jar jarfile="${product}/SDRTrunk.jar" basedir="${classes}">
	  <manifest>
        <attribute name="Main-Class" value="gui.SDRTrunk"/>
      </manifest>
	  <fileset dir="${configs}">
  	  	<exclude name="*.rules"/>
  	  </fileset>
	  
  	  <fileset dir="${license}">
  	  	<include name="license.txt"/>
  	  </fileset>
    </jar>
    
    <!-- Copy third-party libraries -->
    <mkdir dir="${product}/libs"/>
    <copy todir="${product}/libs">
	  <fileset dir="${libs}" includes="*.jar" />
    </copy>
    
    <!-- Copy config files -->
    <mkdir dir="${product}/config"/>

    <copy todir="${product}/config">
	  <fileset dir="${configs}">
  	  	<include name="*.rules"/>
  	  </fileset>
    </copy>
    
    <!-- Copy image files -->
    <mkdir dir="${product}/images"/>
    <copy todir="${product}/images">
	  <fileset dir="${images}" />
    </copy>
    
    <!-- Copy license file -->
    <copy todir="${product}">
	  <fileset dir="${license}" />
    </copy>
    
    <!-- Copy program scripts -->
    <copy todir="${product}">
	  <fileset dir="${scripts}" />
    </copy>

    <!-- Set linux permissions on start script -->
  	<chmod file="${product}/run_sdrtrunk_linux.sh" perm="777" />
  	
  	<tstamp prefix="build" />

    <property name="filename" value="sdrtrunk_${build.DSTAMP}_${build.TSTAMP}_${major}.${minor}.${build}"/>

  	<!-- Bundle the files into .zip -->
  	<zip destfile="${product}/${filename}.zip" basedir="${product}" />
  	
  	<!-- Bundle the files into .tar.gz to preserve linux script permissions -->
  	<tar destfile="${product}/${filename}.tar.gz" compression="gzip">
 	  <tarfileset dir="${product}" filemode="777">
  	    <include name="*.sh"/>
  	  </tarfileset>
   	  <tarfileset dir="${product}">
  	    <exclude name="*.sh"/>
  	  </tarfileset>
  	</tar>  	
  </target>

  <target name="clean" description="Clean previous build artifacts" >
    <delete dir="${classes}"/>
    <delete dir="${product}"/>
  </target>

</project>