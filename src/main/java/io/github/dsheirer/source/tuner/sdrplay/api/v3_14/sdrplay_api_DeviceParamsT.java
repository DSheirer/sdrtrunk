/*
 * *****************************************************************************
 * Copyright (C) 2014-2024 Dennis Sheirer
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 * ****************************************************************************
 */

// Generated by jextract

package io.github.dsheirer.source.tuner.sdrplay.api.v3_14;

import java.lang.foreign.MemoryLayout;
import java.lang.foreign.MemorySegment;
import java.lang.foreign.SegmentAllocator;
import java.lang.foreign.SegmentScope;
import java.lang.foreign.StructLayout;
import java.lang.invoke.VarHandle;
/**
 * {@snippet :
 * struct {
 *     sdrplay_api_DevParamsT* devParams;
 *     sdrplay_api_RxChannelParamsT* rxChannelA;
 *     sdrplay_api_RxChannelParamsT* rxChannelB;
 * };
 * }
 */
public class sdrplay_api_DeviceParamsT {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("devParams"),
        Constants$root.C_POINTER$LAYOUT.withName("rxChannelA"),
        Constants$root.C_POINTER$LAYOUT.withName("rxChannelB")
    );
    public static MemoryLayout $LAYOUT() {
        return sdrplay_api_DeviceParamsT.$struct$LAYOUT;
    }
    static final VarHandle devParams$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("devParams"));
    public static VarHandle devParams$VH() {
        return sdrplay_api_DeviceParamsT.devParams$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * sdrplay_api_DevParamsT* devParams;
     * }
     */
    public static MemorySegment devParams$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)sdrplay_api_DeviceParamsT.devParams$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * sdrplay_api_DevParamsT* devParams;
     * }
     */
    public static void devParams$set(MemorySegment seg, MemorySegment x) {
        sdrplay_api_DeviceParamsT.devParams$VH.set(seg, x);
    }
    public static MemorySegment devParams$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)sdrplay_api_DeviceParamsT.devParams$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void devParams$set(MemorySegment seg, long index, MemorySegment x) {
        sdrplay_api_DeviceParamsT.devParams$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle rxChannelA$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("rxChannelA"));
    public static VarHandle rxChannelA$VH() {
        return sdrplay_api_DeviceParamsT.rxChannelA$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * sdrplay_api_RxChannelParamsT* rxChannelA;
     * }
     */
    public static MemorySegment rxChannelA$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)sdrplay_api_DeviceParamsT.rxChannelA$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * sdrplay_api_RxChannelParamsT* rxChannelA;
     * }
     */
    public static void rxChannelA$set(MemorySegment seg, MemorySegment x) {
        sdrplay_api_DeviceParamsT.rxChannelA$VH.set(seg, x);
    }
    public static MemorySegment rxChannelA$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)sdrplay_api_DeviceParamsT.rxChannelA$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void rxChannelA$set(MemorySegment seg, long index, MemorySegment x) {
        sdrplay_api_DeviceParamsT.rxChannelA$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle rxChannelB$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("rxChannelB"));
    public static VarHandle rxChannelB$VH() {
        return sdrplay_api_DeviceParamsT.rxChannelB$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * sdrplay_api_RxChannelParamsT* rxChannelB;
     * }
     */
    public static MemorySegment rxChannelB$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)sdrplay_api_DeviceParamsT.rxChannelB$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * sdrplay_api_RxChannelParamsT* rxChannelB;
     * }
     */
    public static void rxChannelB$set(MemorySegment seg, MemorySegment x) {
        sdrplay_api_DeviceParamsT.rxChannelB$VH.set(seg, x);
    }
    public static MemorySegment rxChannelB$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)sdrplay_api_DeviceParamsT.rxChannelB$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void rxChannelB$set(MemorySegment seg, long index, MemorySegment x) {
        sdrplay_api_DeviceParamsT.rxChannelB$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


